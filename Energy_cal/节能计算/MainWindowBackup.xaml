<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.ignore.com"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:local="clr-namespace:公路养护工程能耗计算软件ECMS" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:VM="clr-namespace:公路养护工程能耗计算软件ECMS.ViewModel"
        xmlns:converter="clr-namespace:公路养护工程能耗计算软件ECMS.Converters"
        xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit" xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock" xmlns:ec="http://schemas.microsoft.com/expression/2010/controls" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" x:Class="公路养护工程能耗计算软件ECMS.MainWindowBackup"        
        mc:Ignorable="d ignore"
        Height="600"
        Width="800"
       WindowStartupLocation="CenterScreen" 
   
    x:Name="MyMainWindow"
   DataContext="{Binding Path=Main, Source={StaticResource Locator}}"
        >
    <Window.Resources>
    	<Style x:Key="MsgBoxExclamation" TargetType="{x:Type xctk:MessageBox}" />
       
    	<XmlDataProvider x:Key="XmlDevices" Source="OriginalXml/Devices.xml" />

        <converter:ColorToBrushConverter x:Key="colortobrush"/>
    </Window.Resources>
  



    <DockPanel Background="{Binding ElementName=colorpicker, Path=SelectedColor, Converter={StaticResource colortobrush}}">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File"/>
            <MenuItem Header="_Calculator"  StaysOpenOnClick="True">
                <xctk:Calculator></xctk:Calculator>
            </MenuItem>
            <MenuItem Header="_背景">
                <MenuItem Header="颜色">
                    <xctk:ColorPicker Name="colorpicker" DisplayColorAndName="True" SelectedColor="SkyBlue" ></xctk:ColorPicker>
                    
                </MenuItem>
                <MenuItem Name="RestoreToDefaultColor" Header="恢复默认" Click="RestoreToDefaultColor_Click"></MenuItem>
            </MenuItem>
            <MenuItem Header="计算消耗"
                      Click="MenuItem_Click"
                      >
                
                
            </MenuItem>

        </Menu>
		<StatusBar DockPanel.Dock ="Bottom"
			 >
			<StatusBarItem>
				<StatusBarItem.ContextMenu>
                    <ContextMenu/>
                </StatusBarItem.ContextMenu>
				<TextBlock x:Name="statBarText" Text="{Binding SelectedValue, ElementName=yuancai}" />
			</StatusBarItem>
		</StatusBar>


		<Grid DockPanel.Dock="Top" Name="MainGrid">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>

				<ColumnDefinition Width="1*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<!--<GridSplitter Grid.Column ="0" Grid.ColumnSpan="2" Width ="50" Background ="Gray" />-->
			<Grid Grid.Column="1">
			
				<ScrollViewer>
					<ScrollViewer.Resources>
						<converter:WindowsStateToBoolenConverter x:Key="winstatetobool"/>
					</ScrollViewer.Resources>
					<xctk:WrapPanel    Orientation="Vertical"  >

                   
                        <Expander x:Name="yuancaiexpandergrid" IsExpanded="True" Header="{Binding Wrapbtns[0]}"  Style="{StaticResource MyExpanderStyle}"  HeaderTemplate="{StaticResource PictureNameDatatemplate}"  >
						

								<DataGrid AutoGenerateColumns="False" x:Name="testgrid"
									ItemsSource="{Binding XPath=/直接能源消耗/原材料能耗/*}"
									DataContext="{Binding DatagridVM.Xdp}"
                                    
                                      
									CanUserAddRows="True" CanUserSortColumns="True"
								 AllowDrop="True" HeadersVisibility="All" GridLinesVisibility="All" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
									SelectedValuePath="@Name" SelectedValue="{Binding SelectedValue, ElementName=yuancai}"
                                          
                                    >

									<DataGrid.Columns>
										<DataGridTemplateColumn Header="环节" CellTemplate="{DynamicResource DataGridTextBlockColumnCell}"/>
										<DataGridTextColumn
                                            
											Binding="{Binding XPath=@DefaultValue}"
											Header="数量"
                                                
                                        />
                                    <DataGridTextColumn Header="单位" Binding="{Binding XPath=@Unit}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="备注" Binding="{Binding XPath=@Back}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="编号" Binding="{Binding XPath=@ID}"/>

									</DataGrid.Columns>


								</DataGrid>
							
						</Expander>
						<Expander x:Name="hunheexpandergrid" IsExpanded="True"  Header="{Binding Wrapbtns[1]}" Style="{StaticResource MyExpanderStyle}" HeaderTemplate="{StaticResource PictureNameDatatemplate}" >
							<StackPanel Orientation="Vertical">
								<DataGrid AutoGenerateColumns="False"
									ItemsSource="{Binding XPath=/直接能源消耗/混合料生产/*}"
									DataContext="{Binding DatagridVM.Xdp}"
									CanUserAddRows="True" CanUserSortColumns="True"
									 AllowDrop="True" HeadersVisibility="All" GridLinesVisibility="All" 
									RowDetailsTemplate="{StaticResource RowDetailsTemplate}"
                  >

									<DataGrid.Columns>
										<DataGridTemplateColumn Header="环节" CellTemplate="{DynamicResource DataGridTextBlockColumnCell}"/>
										<DataGridTextColumn
											Binding="{Binding XPath=@DefaultValue}"
											Header="数量"
                    
                    />
                                        <DataGridTextColumn Header="单位" Binding="{Binding XPath=@Unit}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="备注" Binding="{Binding XPath=@Back}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="编号" Binding="{Binding XPath=@ID}"/>

									</DataGrid.Columns>


								</DataGrid>
							</StackPanel>
						</Expander>
                        <Expander x:Name="nianyaexpandergrid" IsExpanded="True"  Header="{Binding Wrapbtns[2]}" Style="{StaticResource MyExpanderStyle}"  HeaderTemplate="{StaticResource PictureNameDatatemplate}">
                            <ScrollViewer>
                                <DataGrid AutoGenerateColumns="False"
                                          
									ItemsSource="{Binding XPath=/直接能源消耗/混合料摊铺碾压/*}"
									DataContext="{Binding DatagridVM.Xdp}"
									CanUserAddRows="True" CanUserSortColumns="True"
									 AllowDrop="True" HeadersVisibility="All" GridLinesVisibility="All"
                  >
                                    <DataGrid.RowDetailsTemplate>
                                        <DataTemplate>
                                            <DataTemplate.Resources>
                                                <XmlDataProvider x:Key="testxdp" Source="OriginalXml\Devices.xml" />

                                            </DataTemplate.Resources>
                                            <StackPanel Orientation="Horizontal" DataContext="{StaticResource testxdp}">
                                                <ComboBox
													ItemsSource="{Binding XPath=//具体设备}"
                                                    >

                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <Grid>
                                                                <TextBlock Text="{Binding XPath=@Name}"/>
                                                            </Grid>
                                                        </DataTemplate>

                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </StackPanel>

                                        </DataTemplate>


                                    </DataGrid.RowDetailsTemplate>
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn Header="环节" CellTemplate="{DynamicResource DataGridTextBlockColumnCell}" IsReadOnly="True"/>
                                        <DataGridTextColumn
                                    		Binding="{Binding XPath=@DefaultValue}"
                                    		Header="数量"
                                
                                                     />
                                        <DataGridTextColumn Header="单位" Binding="{Binding XPath=@Unit}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="备注" Binding="{Binding XPath=@Back}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="编号" Binding="{Binding XPath=@ID}"/>

                                    </DataGrid.Columns>


                                </DataGrid>
                            </ScrollViewer>

                        </Expander>
                        <Expander x:Name="yunsuexpandergird" IsExpanded="True"  Header="{Binding Wrapbtns[3]}" Style="{StaticResource MyExpanderStyle}" HeaderTemplate="{StaticResource PictureNameDatatemplate}" >
							<StackPanel Orientation="Vertical" >
								<DataGrid AutoGenerateColumns="False"
									ItemsSource="{Binding XPath=/直接能源消耗/材料运输/*}"
									DataContext="{Binding DatagridVM.Xdp}"
									CanUserAddRows="True" CanUserSortColumns="True"
									 AllowDrop="True" HeadersVisibility="All" GridLinesVisibility="All" 
                  >

									<DataGrid.Columns>
										<DataGridTemplateColumn Header="环节" CellTemplate="{DynamicResource DataGridTextBlockColumnCell}"/>
										<DataGridTextColumn
											Binding="{Binding XPath=@DefaultValue}"
											Header="数量"
                    
                    />
                                        <DataGridTextColumn Header="单位" Binding="{Binding XPath=@Unit}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="备注" Binding="{Binding XPath=@Back}" IsReadOnly="True"/>

                                        <DataGridTextColumn Header="编号" Binding="{Binding XPath=@ID}"/>
									</DataGrid.Columns>


								</DataGrid>
							</StackPanel>
						</Expander>
					</xctk:WrapPanel>
				</ScrollViewer>
			</Grid>
       
			<Grid Grid.Column="0">
                <GroupBox Header="环节查看">
				<ScrollViewer >
                 
					<StackPanel >
						<Expander x:Name="yuancaiexpander" IsExpanded="{Binding IsExpanded, ElementName=yuancaiexpandergrid, Mode=OneWayToSource}" Header="{Binding Wrapbtns[0].Name}"  HorizontalAlignment="Left" >
							<StackPanel Orientation="Horizontal" >
								<ListBox ItemsSource="{Binding XPath=/直接能源消耗/原材料能耗/*}"
									DataContext="{Binding DatagridVM.Xdp}"
									ItemTemplate="{StaticResource DataGridTextBlockColumnCell}"
									SelectedValuePath="@Name"
									x:Name="yuancai"
											/>
                              
							</StackPanel>
						</Expander>
                        <Separator Background="#11FFFFFF" />
                        <Expander x:Name="hunheexpander" IsExpanded="{Binding IsExpanded, ElementName=hunheexpandergrid, Mode=OneWayToSource}" Header="{Binding Wrapbtns[1].Name}"  HorizontalAlignment="Left" >
							<StackPanel Orientation="Horizontal"  x:Name="sta">
								<ListBox ItemsSource="{Binding XPath=/直接能源消耗/混合料生产/*}"
									DataContext="{Binding DatagridVM.Xdp}"
									ItemTemplate="{StaticResource DataGridTextBlockColumnCell}"
									x:Name="hunhe"
							/>
                            
							</StackPanel>
						</Expander>
                        <Separator Background="#11FFFFFF" />
                        <Expander x:Name="nianyaexpander" IsExpanded="{Binding IsExpanded, ElementName=nianyaexpandergrid, Mode=OneWayToSource}" Header="{Binding Wrapbtns[2].Name}"  HorizontalAlignment="Left">
							<StackPanel Orientation="Horizontal" >
								<ListBox ItemsSource="{Binding XPath=/直接能源消耗/混合料摊铺碾压/*}"
									DataContext="{Binding DatagridVM.Xdp}"
									ItemTemplate="{StaticResource DataGridTextBlockColumnCell}"/>
                              
							</StackPanel>
						</Expander>
                        <Separator Background="#11FFFFFF" />
                        <Expander x:Name="yunsuexpander" IsExpanded="{Binding IsExpanded, ElementName=yunsuexpandergird, Mode=OneWayToSource}" Header="{Binding Wrapbtns[3].Name}"  HorizontalAlignment="Left">
							<StackPanel Orientation="Horizontal" >
                              
								<ListBox ItemsSource="{Binding XPath=/直接能源消耗/材料运输/*}"
									DataContext="{Binding DatagridVM.Xdp}"
									ItemTemplate="{StaticResource DataGridTextBlockColumnCell}"/>
                             

							</StackPanel>
						</Expander>
                        <Separator Background="#11FFFFFF" />
                    </StackPanel>
				</ScrollViewer>
                </GroupBox>
            </Grid>
			<Grid Grid.Column="2">
				<Grid.RowDefinitions>
					<RowDefinition Height="1*"/>
					<RowDefinition Height="1*"/>
                    
				</Grid.RowDefinitions>
                <GroupBox Header="设备选择" Grid.Row="0">
				<Grid >
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="1*"/>
						<ColumnDefinition Width="1*"/>
					</Grid.ColumnDefinitions>
					<StackPanel Grid.Column="0"   Orientation="Vertical">
						<TextBlock TextWrapping="Wrap" Text="设备类别" x:Name="textBox1"/>
						<StackPanel Orientation="Horizontal">

							<xctk:WatermarkTextBox Margin="5"
								x:Name="deviceClasswatertextbox"
                                                   >
								<xctk:WatermarkTextBox.Watermark>
									<StackPanel Orientation="Horizontal">
										<Image Stretch="None" />
										<TextBlock Text="Enter Text" Margin="4,0,0,0" />
									</StackPanel>
								</xctk:WatermarkTextBox.Watermark>
							</xctk:WatermarkTextBox>
							<Separator Background="#11FFFFFF" />
							<Button Content="增加类别" Click="Button_Click_1" />

						</StackPanel>
						<Separator Background="#11FFFFFF" />
						<xctk:CheckListBox
							ItemsSource="{Binding Source={StaticResource XmlDevices}, XPath=/设备/代码测试设备/使用到的设备}"
                            
							ItemTemplate="{StaticResource ATNameListBoxItemtemplate}"
							x:Name="ChecklistBox1"
							
							Command="{Binding TestCommand}" BorderBrush="{x:Null}" Background="SkyBlue"
                          
                                   >
							<xctk:CheckListBox.ContextMenu>
								<ContextMenu>
									<MenuItem Header="_Bold"
										IsCheckable="True"
										Checked="Bold_Checked"
										Unchecked="Bold_Unchecked" />
									<MenuItem Header="_Italic"
										IsCheckable="True"
										Checked="Italic_Checked"
										Unchecked="Italic_Unchecked" />
									<Separator />
									<MenuItem Header="I_ncrease Font Size"
										Click="IncreaseFont_Click" >
										<MenuItem Header="_ffds"/>
									</MenuItem>
									<MenuItem Header="_Decrease Font Size"
										Click="DecreaseFont_Click" />


								</ContextMenu>
                                
							</xctk:CheckListBox.ContextMenu>
						</xctk:CheckListBox>
                    
					</StackPanel>
					<StackPanel Grid.Column="1"  Orientation="Vertical">
						<TextBlock TextWrapping="Wrap" Text="设备型号"/>
						<StackPanel Orientation="Horizontal">

							<xctk:WatermarkTextBox Margin="5" x:Name="DeviceswaterTextbox">
								<xctk:WatermarkTextBox.Watermark>
									<StackPanel Orientation="Horizontal">
										<Image Stretch="None" />
										<TextBlock Text="Enter Text" Margin="4,0,0,0" />
									</StackPanel>
								</xctk:WatermarkTextBox.Watermark>
							</xctk:WatermarkTextBox>
							<Separator Background="#11FFFFFF" />
							<Button Content="增加设备" Click="Button_Click_2" />

						</StackPanel>
						<Separator Background="#11FFFFFF" />
						<xctk:CheckListBox
							BorderBrush="{x:Null}"
							Background="SkyBlue"
							x:Name="subdeviceschecklist"
							ItemsSource="{Binding}"
							
							ItemTemplate="{StaticResource ATNameListBoxItemtemplate}"
                    
                    >
							<!--<xctk:CheckListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>

                                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                    <ContentPresenter  Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                            
                                            </ControlTemplate>
                                            
                                            
                                        </Setter.Value>
                                        
                                        
                                        
                                    </Setter>
                                    
                                </Style>
                                
                            </xctk:CheckListBox.ItemContainerStyle>-->

						</xctk:CheckListBox>




					</StackPanel>
				</Grid>
                </GroupBox>
                <Grid Grid.Row="1">
                    <GroupBox Header="计算项目（共计10项）">
                    <ListBox
                        ItemsSource="{Binding XMLResults}"
                        ItemContainerStyle="{StaticResource mylistboxitemstyle}"
                     ItemTemplate="{StaticResource mylistboxitemtemplate}"
                       
                        />
					<!--<ec:PathListBox ItemsSource="{Binding XPath=//结果项}" DataContext="{Binding ResultsVM.Xdp}" ItemTemplate="{StaticResource ResultRenderTemplate}" WrapItems="True"  >
                		<ec:PathListBox.LayoutPaths>
                			<ec:LayoutPath SourceElement="{Binding ElementName=lineArrow}" Distribution="Even"/>
                		</ec:PathListBox.LayoutPaths>
                	</ec:PathListBox>
                	<Button Content="Button" Height="25.067" Margin="82.467,0,97.067,0.697" VerticalAlignment="Bottom"/>
                	<ed:LineArrow x:Name="lineArrow" HorizontalAlignment="Left" Margin="118.667,-7.882,0,38.364" Stroke="Black" Width="0"/>-->
                    </GroupBox>
                </Grid>

			</Grid>
        </Grid>

        <!--  <Grid DockPanel.Dock="Bottom" Name="ChartGrid" Visibility="Collapsed" >
            <StackPanel Orientation="Horizontal"  Name="Chartstackpanel">
                <Button Content="后退"></Button>
                <Visifire_Charts:Chart x:Name="Chartbar"   View3D="True" Margin="10,10,10,10" Height="400" Width="500"  HorizontalAlignment="Left">
                       <Visifire_Charts:Chart.Series>
                            <Visifire_Charts:DataSeries LabelEnabled="True">
                                <Visifire_Charts:DataSeries.DataPoints>
                                    <Visifire_Charts:DataPoint  AxisXLabel="0-20"  YValue="10"/>
                                <Visifire_Charts:DataPoint  AxisXLabel="20-40"  YValue="10"/>
                                <Visifire_Charts:DataPoint  AxisXLabel="40-60"  YValue="10"/>
                                <Visifire_Charts:DataPoint  AxisXLabel="60-80"  YValue="10"/>
                                <Visifire_Charts:DataPoint  AxisXLabel="80-100"  YValue="10"/>
                                  </Visifire_Charts:DataSeries.DataPoints>

                              </Visifire_Charts:DataSeries>
            </Visifire_Charts:Chart.Series>
        </Visifire_Charts:Chart>
            </StackPanel>
        </Grid>-->
    </DockPanel>
      
    
</Window>
